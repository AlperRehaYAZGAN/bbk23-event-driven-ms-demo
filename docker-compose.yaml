# simple docker-compose.yml file for redis, minio and kafka
version: '3'

services:
  # redis service
  redisapp:
    image: redis:7.0-rc3-alpine3.15
    networks:
      - bbfnnet
    ports:
      - "6379:6379"
    volumes:
      - ./volumes/redis:/data
    environment:
      - REDIS_PASSWORD=1020304050
    restart: always
    command: redis-server --requirepass 1020304050 --dir /data
    healthcheck:
      test: redis-cli -h "$$HOST" -p "$$PORT" ping
      interval: 10s
      timeout: 2s
      retries: 10
 # zookeeper
  zookeeperapp: 
    image: 'wurstmeister/zookeeper:latest' 
    ports: 
      - '2181:2181' 
    environment: 
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes: 
      - ./volumes/zookeeper:/var/lib/zookeeper/data
  # kafka
  kafkaapp: 
    image: 'wurstmeister/kafka:latest' 
    ports: 
      - '9092:9092' 
    environment: 
      - KAFKA_BROKER_ID=1 
      - KAFKA_LISTENERS=PLAINTEXT://:9092 
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092 
      - KAFKA_ZOOKEEPER_CONNECT=zookeeperapp:2181 
      - ALLOW_PLAINTEXT_LISTENER=yes
      # auto create topic set true
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - ./volumes/kafka:/var/lib/kafka/data
    depends_on: 
      - zookeeperapp
  # minio
  minioapp:
    image: minio/minio:RELEASE.2023-01-31T02-24-19Z
    networks:
      - bbfnnet
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minio123
      - MINIO_ROOT_PASSWORD=minio123
    restart: always
    volumes:
      - ./volumes/minio:/data
    command: server /data --console-address ":9001"

# network: bbfnnet
networks:
  bbfnnet:
    name: bbfnnet
    driver: bridge